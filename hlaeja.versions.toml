[versions]
# kotlin version
kotlin = "2.0.10"

# plugin third party version
arturboschDetektPlugin = "1.23.7"
jlleitschuhKtlintPlugin = "12.1.1"
springframeworkBoot = "3.3.5"
bmuschkoDocker = "9.4.0"
jsonwebtoken = "0.12.6"

# hlaeja version
hlaejaCorePlugin = "0.2.0"
hlaejaCommonPlugin = "0.2.0"
hlaejaCommonMessages = "0.4.0"


[libraries]
fasterxml-jackson-module-kotlin = { group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin" }
influxdb-client-kotlin = { group = "com.influxdb", name = "influxdb-client-kotlin", version = "7.2.0" }
jjwt-api = { group = "io.jsonwebtoken", name = "jjwt-api", version.ref = "jsonwebtoken" }
jjwt-impl = { group = "io.jsonwebtoken", name = "jjwt-impl", version.ref = "jsonwebtoken" }
jjwt-jackson = { group = "io.jsonwebtoken", name = "jjwt-jackson", version.ref = "jsonwebtoken" }
kotlin-logging = { group = "io.github.microutils", name = "kotlin-logging-jvm", version = "3.0.5" }
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect" }
kotlinx-coroutines = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-reactor" }
postgresql = { group = "org.postgresql", name = "postgresql" }
postgresql-r2dbc = { group = "org.postgresql", name = "r2dbc-postgresql" }
springboot-starter-actuator = { group = "org.springframework.boot", name = "spring-boot-starter-actuator" }
springboot-starter-cassandra = { group = "org.springframework.boot", name = "spring-boot-starter-data-cassandra"}
springboot-starter-cassandra-reactive = { group = "org.springframework.boot", name = "spring-boot-starter-data-cassandra-reactive"}
springboot-starter-r2dbc = { group = "org.springframework.boot", name = "spring-boot-starter-data-r2dbc" }
springboot-starter-webflux = { group = "org.springframework.boot", name = "spring-boot-starter-webflux" }

# testing libraries
assertj-core = { group = "org.assertj", name = "assertj-core", version = "3.26.3" }
junit-jupiter-params = { group = "org.junit.jupiter", name = "junit-jupiter-params" }
junit-platform-launcher = { group = "org.junit.platform", name = "junit-platform-launcher" }
kotlin-test = { group = "org.jetbrains.kotlin", name = "kotlin-test", version.ref = "kotlin" }
kotlin-test-junit5 = { group = "org.jetbrains.kotlin", name = "kotlin-test-junit5" }
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test" }
mockk = { group = "io.mockk", name = "mockk", version = "1.13.13" }
projectreactor-reactor-test = { group = "io.projectreactor", name = "reactor-test" }
springboot-starter-test = { group = "org.springframework.boot", name = "spring-boot-starter-test" }

# plugin core dependencies
org-eclipse-jgit = { group = "org.eclipse.jgit", name = "org.eclipse.jgit", version = "7.0.0.202409031743-r" }

# plugin common dependencies
com-bmuschko-docker-gradle-plugin = { group = "com.bmuschko", name = "gradle-docker-plugin", version.ref = "bmuschkoDocker" }
io-gitlab-arturbosch-detekt-gradle-plugin = { group = "io.gitlab.arturbosch.detekt", name = "detekt-gradle-plugin", version.ref = "arturboschDetektPlugin" }
ltd-hlaeja-plugin-core = { group = "ltd.hlaeja.plugin.hlaeja-core-plugin", name = "ltd.hlaeja.plugin.hlaeja-core-plugin.gradle.plugin", version.ref = "hlaejaCorePlugin" }
org-jetbrains-kotlin-gradle-plugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
org-jlleitschuh-ktlint-gradle-plugin = { group = "org.jlleitschuh.gradle", name = "ktlint-gradle", version.ref = "jlleitschuhKtlintPlugin" }
org-springframework-springboot-gradle-plugin = { group = "org.springframework.boot", name = "spring-boot-gradle-plugin", version.ref = "springframeworkBoot" }

# plugin common dependencies hlaeja
library-hlaeja-common-messages = { group = "ltd.hlaeja.library", name = "hlaeja-common-messages", version.ref = "hlaejaCommonMessages" }


[plugins]
com-bmuschko-docker = { id = "com.bmuschko.docker-spring-boot-application", version.ref = "bmuschkoDocker" }
io-gitlab-arturbosch-detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "arturboschDetektPlugin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
org-jlleitschuh-gradle-ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "jlleitschuhKtlintPlugin" }
spring-dependency-management = { id = "io.spring.dependency-management", version = "1.1.6" }
springframework-boot = { id = "org.springframework.boot", version.ref = "springframeworkBoot" }

# hlaeja plugin
ltd-hlaeja-plugin-core = { id = "ltd.hlaeja.plugin.hlaeja-core-plugin", version.ref = "hlaejaCorePlugin" }
ltd-hlaeja-plugin-common = { id = "ltd.hlaeja.plugin.hlaeja-common-plugin.common", version.ref = "hlaejaCommonPlugin" }
ltd-hlaeja-plugin-common-detekt = { id = "ltd.hlaeja.plugin.hlaeja-common-plugin.common-detekt", version.ref = "hlaejaCommonPlugin" }
ltd-hlaeja-plugin-common-ktlint = { id = "ltd.hlaeja.plugin.hlaeja-common-plugin.common-ktlint", version.ref = "hlaejaCommonPlugin" }
ltd-hlaeja-plugin-library = { id = "ltd.hlaeja.plugin.hlaeja-common-plugin.library", version.ref = "hlaejaCommonPlugin" }
ltd-hlaeja-plugin-library-manifest = { id = "ltd.hlaeja.plugin.hlaeja-common-plugin.library-manifest", version.ref = "hlaejaCommonPlugin" }
ltd-hlaeja-plugin-library-publish = { id = "ltd.hlaeja.plugin.hlaeja-common-plugin.library-publish", version.ref = "hlaejaCommonPlugin" }
ltd-hlaeja-plugin-service = { id = "ltd.hlaeja.plugin.hlaeja-common-plugin.service", version.ref = "hlaejaCommonPlugin" }
ltd-hlaeja-plugin-service-container = { id = "ltd.hlaeja.plugin.hlaeja-common-plugin.service-container", version.ref = "hlaejaCommonPlugin" }
ltd-hlaeja-plugin-service-integration-test = { id = "ltd.hlaeja.plugin.hlaeja-common-plugin.service-integration-test", version.ref = "hlaejaCommonPlugin" }
ltd-hlaeja-plugin-service-process-resource = { id = "ltd.hlaeja.plugin.hlaeja-common-plugin.service-process-resource", version.ref = "hlaejaCommonPlugin" }
ltd-hlaeja-plugin-certificate = { id = "ltd.hlaeja.plugin.hlaeja-common-plugin.certificate", version.ref = "hlaejaCommonPlugin" }
